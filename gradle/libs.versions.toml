#
# Copyright 2025 Marlonlom
# SPDX-License-Identifier: Apache-2.0
#

[versions]
agp = "8.13.0"
mapsplatform-secrets = "2.0.1"
kotlin = "2.2.20"
ktor = "3.3.0"
spotless = "8.0.0"

[libraries]
#[libraries] implementation
androidx-activity-compose = "androidx.activity:activity-compose:1.11.0"
androidx-core-ktx = "androidx.core:core-ktx:1.17.0"
androidx-datastore-preferences = "androidx.datastore:datastore-preferences:1.2.0-alpha02"
androidx-lifecycle-runtime-ktx = "androidx.lifecycle:lifecycle-runtime-ktx:2.9.4"
kotlinx-serialization-json = "org.jetbrains.kotlinx:kotlinx-serialization-json:1.9.0"
maps-compose = "com.google.maps.android:maps-compose:6.12.1"
play-services-maps = "com.google.android.gms:play-services-maps:19.2.0"

#[libraries] implementation: androidx compose bom
androidx-compose-bom = "androidx.compose:compose-bom:2025.09.01"
androidx-material3 = { module = "androidx.compose.material3:material3" }
androidx-ui = { module = "androidx.compose.ui:ui" }
androidx-ui-graphics = { module = "androidx.compose.ui:ui-graphics" }
androidx-ui-tooling-preview = { module = "androidx.compose.ui:ui-tooling-preview" }

#[libraries] implementation: koin
koin-bom = "io.insert-koin:koin-bom:4.1.1"
koin-core = { module = "io.insert-koin:koin-core" }
koin-androidx-compose = { module = "io.insert-koin:koin-androidx-compose" }

#[libraries] implementation: ktor-client-android
ktor-client-android = { module = "io.ktor:ktor-client-android", version.ref = "ktor" }
ktor-client-content-negotiation = { module = "io.ktor:ktor-client-content-negotiation", version.ref = "ktor" }
ktor-client-core = { module = "io.ktor:ktor-client-core", version.ref = "ktor" }
ktor-client-serialization = { module = "io.ktor:ktor-client-serialization", version.ref = "ktor" }
ktor-serialization-kotlinx-json = { module = "io.ktor:ktor-serialization-kotlinx-json", version.ref = "ktor" }

#[libraries] debug-implementation
androidx-ui-tooling = { module = "androidx.compose.ui:ui-tooling" }
androidx-ui-test-manifest = { module = "androidx.compose.ui:ui-test-manifest" }

#[libraries] test-implementation
junit = "junit:junit:4.13.2"
kotlinx-coroutines-test = "org.jetbrains.kotlinx:kotlinx-coroutines-test:1.10.2"
ktor-client-mock = { module = "io.ktor:ktor-client-mock", version.ref = "ktor" }

#[libraries] android-test-implementation
androidx-espresso-core = "androidx.test.espresso:espresso-core:3.7.0"
androidx-junit = "androidx.test.ext:junit:1.3.0"
androidx-ui-test-junit4 = { module = "androidx.compose.ui:ui-test-junit4" }
google-truth = "com.google.truth:truth:1.4.5"

#[libraries] gradle convention plugin
android-gradlePlugin = "com.android.tools.build:gradle:8.13.0"
kotlin-gradlePlugin = "org.jetbrains.kotlin:kotlin-gradle-plugin:2.2.20"
compose-compiler-gradlePlugin = "org.jetbrains.kotlin:compose-compiler-gradle-plugin:2.2.20"
spotless-gradlePlugin = "com.diffplug.spotless:spotless-plugin-gradle:8.0.0"

[plugins]
android-application = { id = "com.android.application", version.ref = "agp" }
android-library = { id = "com.android.library", version.ref = "agp" }
google-secrets = { id = "com.google.android.libraries.mapsplatform.secrets-gradle-plugin", version.ref = "mapsplatform-secrets" }
kotlin-android = { id = "org.jetbrains.kotlin.android", version.ref = "kotlin" }
kotlin-compose = { id = "org.jetbrains.kotlin.plugin.compose", version.ref = "kotlin" }
kotlin-serialization = { id = "org.jetbrains.kotlin.plugin.serialization", version.ref = "kotlin" }
spotless = { id = "com.diffplug.spotless", version.ref = "spotless" }

[bundles]
koin = ["koin-core", "koin-androidx-compose"]
ktor-android-client = ["ktor-client-android", "ktor-client-content-negotiation", "ktor-client-core", "ktor-client-serialization", "ktor-serialization-kotlinx-json"]
